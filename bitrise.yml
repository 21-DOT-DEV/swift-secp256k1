---
format_version: '11'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: other
meta:
  bitrise.io:
    stack: osx-xcode-15.3.x
    machine_type_id: g2-m1.4core
trigger_map:
- push_branch: main
  pipeline: PIPELINE-SECP256K1-ZKP
- pull_request_source_branch: '*'
  pipeline: PIPELINE-SECP256K1-ZKP
pipelines:  
  PIPELINE-SECP256K1-ZKP:
    stages:
    - CLONE: {}
    - SECP256K1: {}
    - ZKP: {}
stages:
  CLONE:
    workflows:
    - SECP256K1-SWIFT: {}
  SECP256K1:
    workflows:
    - BUILD-SECP256K1: {}
  ZKP:
    workflows:
    - BUILD-ZKP: {}
workflows:
  SECP256K1-SWIFT:
    steps:
    - git-clone:
        title: CLONE SECP256K1.SWIFT
        timeout: 60
    - script:
        title: CHECK LINKS
        timeout: 20
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails; debug log
            set -ex
            
            # This command finds broken symbolic links in a directory and subdirectories.
            # It uses the find command to follow symbolic links and checks if they are
            # broken with the test command. If a broken symbolic link is found, the
            # script fails with a non-zero status code.
            find . -type d -name .build -prune -o -type l ! -exec test -e {} \; -print | grep -q . && exit 1 || exit 0
    - deploy-to-bitrise-io:
        inputs:
        - pipeline_intermediate_files: "$BITRISE_SOURCE_DIR:BITRISE_SOURCE_DIR"
  BUILD-ZKP:
    before_run:
    - PULL-PACKAGE-FILES
    steps:
    - script:
        title: BUILD ZKP
        timeout: 360
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails; debug log
            set -ex

            swift test
  BUILD-SECP256K1:
    before_run:
    - PULL-PACKAGE-FILES
    steps:
    - script:
        title: BUILD SECP256K1
        timeout: 180
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails; debug log
            set -ex

            swift test --package-path Exhaustive/Package
  PULL-PACKAGE-FILES:
    steps:
    - pull-intermediate-files:
        inputs:
        - artifact_sources: CLONE.SECP256K1-SWIFT
